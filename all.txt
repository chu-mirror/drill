Perl|
  Write a big number literal easy to read, add 1 to it and print the result.
  |2|Mon Nov  6 10:20:56 2023
Perl|
  Write a hexadecimal floating-point literal, divide it by 0x10, print the
  resull.
  |2|Mon Nov  6 10:22:50 2023
Perl|
  Compute the expression "10.5 % 3.2" by hand, examine the result.
  |2|Mon Nov  6 10:22:57 2023
Perl|
  Compute the expression "10 / 3" by hand, examine the result.
  |2|Mon Nov  6 10:23:04 2023
Perl|
  Compute 2 raised to the power of 3, print the result.
  |2|Mon Nov  6 12:14:31 2023
Perl|
  Find a way to evaluate "print $你好".
  |2|Mon Nov  6 17:22:39 2023
Perl|
  Print a string with "
  |2|Mon Nov  6 17:22:47 2023
Perl|
  Concatenate some strings.
  |2|Mon Nov  6 17:22:54 2023
Perl|
  Print "999999999" (try to find a way easier than to print it directlty).
  |2|Mon Nov  6 17:23:17 2023
Perl|
  Use a pragma to turn on warnings, evaluate "'12x' * 3" to examine the effect.
  |2|Mon Nov  6 17:23:54 2023
Perl|
  Use a command line option to turn on warnings, evaluate "'12x' * 3" to examine
  the effect.
  |2|Mon Nov  6 17:23:58 2023
Perl|
  Use a pragma to turn on description for warnings, evaluate "'12x' * 3" to
  examine the effect.
  \hint diagnostics
  |2|Mon Nov  6 17:24:34 2023
Perl|
  Use a command line option to set pragma to turn on descriptions for warnings,
  evaluate "'12x' * 3" to examine the effect.
  \hint diagnostics
  |2|Mon Nov  6 17:25:22 2023
Perl|
  Convert strings "0xF", "017", "0b1111" to numbers with corresponding bases.
  |1|Sat Nov  4 09:33:51 2023
Perl|
  Convert string "0F" to number.
  |2|Mon Nov  6 17:25:52 2023
Perl|
  Use "say" to print "Hello".
  |2|Mon Nov  6 17:26:19 2023
Perl|
  Create a single character with code point "0x05D0".
  |0|Sat Nov  4 09:38:54 2023
Perl|
  Print the code point of "あ" (it's bigger than 255).
  |2|Mon Nov  6 17:27:00 2023
Perl|
  Give the operators let the comparison between "abc" and "cba" return true,
  there are at least two such operators.
  |2|Mon Nov  6 17:27:50 2023
Perl|
  Convert a value to the default representation of True or False in Perl, for
  example, convert "Yes" to "1", convert "0" to "" (the default representation
  is not unchanged).
  |2|Mon Nov  6 17:29:47 2023
Perl|
  Read two numbers from user's input, compute their sum and print it, the
  numbers are seperated by newline.
  |2|Mon Nov  6 17:30:38 2023
Perl|
  Remove the ending newline from a string.
  |2|Mon Nov  6 17:31:13 2023
Perl|
  Make a variable undefined.
  |2|Tue Nov  7 12:13:15 2023
Perl|
  Create an array containing numbers from 1 to 10, don't use loop.
  |2|Tue Nov  7 12:13:23 2023
Perl|
  Print the last element in an array, there are at least two ways.
  |2|Tue Nov  7 12:14:06 2023
Perl|
  Use "qw" to create a list containing the files in current directory.
  |2|Tue Nov  7 12:15:28 2023
Perl|
  Swap two variables using list assignment.
  |2|Tue Nov  7 12:16:07 2023
Perl|
  Create a new array by concatenating several lists.
  |2|Tue Nov  7 12:27:50 2023
Perl|
  Remove the ending element from a list, print the removed element.
  |2|Tue Nov  7 12:28:48 2023
Perl|
  Add an element to the end of a list.
  |2|Tue Nov  7 12:29:17 2023
Perl|
  Remove the starting element from a list, print the removed element.
  |2|Tue Nov  7 12:29:59 2023
Perl|
  Add an element to the start of a list.
  |2|Tue Nov  7 12:30:34 2023
Perl|
  Replace the 2 to 4 from "(1..10)" with list that contains 4 to 2, print the
  replaced part.
  \hint splice
  |0|Sat Nov  4 09:52:06 2023
Perl|
  Print "Hello, XXX" for a list of names.
  |2|Tue Nov  7 12:32:00 2023
Perl|
  Print "Hello, guest No. XX, XXX" for a list of names, "XX" is the index of the
  name in that list, there are at least two ways.
  \hint each
  |2|Tue Nov  7 12:35:08 2023
Perl|
  Print the size of a list.
  |2|Wed Nov  8 16:30:32 2023
Perl|
  Read all lines from standard input and cut off all ending newline.
  |2|Wed Nov  8 16:30:55 2023
Perl|
  Write a subroutine that print "Hello".
  |2|Wed Nov  8 16:31:34 2023
Perl|
  Write a subroutine that return the max among its argument list, don't assume
  that the arguments are all positives.
  |2|Wed Nov  8 16:32:04 2023
Perl|
  Consider a way to initialize local variables from the argument list, do it in
  one line of code.
  |2|Wed Nov  8 16:32:19 2023
Perl|
  Make all using of undeclared variables illegal by compiler, there are at least
  two ways.
  \hint strict
  |0|Fri Nov 10 13:45:43 2023
Perl|
  Write a subroutine that each invocation while make the returned value
  incremented by 1, don't use global variables.
  \hint state
  |1|Sat Nov  4 09:54:59 2023
Perl|
  Use subroutine signature to define a subroutine that add two numbers together.
  |1|Sat Nov  4 09:58:15 2023
Perl|
  Read input and print it line by line, consider using Larry shortcut of
  "while".
  |2|Fri Nov 10 13:46:40 2023
Perl|
  Write a simple cat.
  \hint diamond
  |2|Fri Nov 10 13:47:16 2023
Perl|
  Write a simple echo.
  \hint ARGV
  |2|Fri Nov 10 13:47:44 2023
Perl|
  Use diamond operation to read files specified in source code.
  |2|Fri Nov 10 13:48:27 2023
Perl|
  Print number 16 as hexadecimal and octal, take A and B field width
  respectively, A and B are varaibles.
  \hint printf
  |2|Fri Nov 10 13:50:01 2023
Perl|
  Write a simple cp.
  |2|Fri Nov 10 13:52:08 2023
Perl|
  Write a simple cp, use file handlers in scalars.
  \hint "{}"
  |1|Sat Nov  4 10:01:14 2023
Perl|
  Read lines from a file encoded in UTF-8.
  |1|Sat Nov  4 10:01:35 2023
Perl|
  Read lines from a file nonexistent to triggle an error and handle it.
  \hint autodie, die
  |1|Tue Oct 31 13:36:50 2023
Perl|
  Write something to a file at different places in source code, make sure all
  output flushed immediately.
  \hint select
  |0|Sat Nov  4 10:06:20 2023
Perl|
  Read a line of text from file "input", or if failed, read from standard input.
  \hint or
  |1|Tue Oct 31 13:45:22 2023
Perl|
  Create a hash table from list "('Chu', 1, 'Maeda', 2)", write the list in a
  good-looking way.
  |1|Tue Oct 31 13:46:36 2023
Perl|
  Check whether a hash table has an item of a certain key, a sample hash table
  is provided in "hash-sample.pl".
  \context hash
  \hint exists
  |0|Sat Nov  4 10:11:33 2023
Perl|
  Store all keys from a hash table in an array, a sample hash table is provided
  in "hash-sample.pl".
  \context hash
  |1|Wed Nov  1 10:02:29 2023
Perl|
  Store all values from a hash table in an array, a sample hash table is
  provided in "hash-sample.pl".
  \context hash
  |1|Wed Nov  1 10:03:06 2023
Perl|
  Print environment variable PATH.
  \hint %ENV
  |1|Wed Nov  1 10:04:42 2023
Perl|
  Find all lines containing "Regular" in file "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:24:16 2023
Perl|
  Find all head lines in file "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:25:49 2023
Perl|
  Find all lines containing sequence that repeats "." more than 3 times in file
  "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:26:42 2023
Perl|
  Find all lines containing numbers from 5 to 9 in file "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:27:51 2023
Perl|
  Find all lines containing either "regex" or "regular expression" in file
  "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:28:41 2023
Perl|
  Find all lines containing continuous same characters in file "perlre.txt".
  \context regex
  |1|Sat Nov  4 09:29:46 2023
Bash|
  Add some shortcuts for some directories so that "cd" can easily go there.
  |1|Sat Nov  4 09:30:35 2023
C++|
  Write "int a = 2.7;" in another way that will be prevented by compiler.
  \context template
  \hint list-initialization
  |1|Sat Nov  4 09:31:56 2023
C++|
  Write "char a = 1000;" in another way that will be prevented by compiler.
  \context template
  \hint list-initialization
  |1|Sat Nov  4 09:32:23 2023
C++|
  Tell the difference between "type(value)" and "type{value}".
  |1|Sat Nov  4 09:52:20 2023
